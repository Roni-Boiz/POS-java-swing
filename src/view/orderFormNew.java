/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CustomerController;
import controller.InvoiceController;
import controller.ItemController;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Item;
import model.Order;
import model.OrderDetail;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ronila
 */
public class orderFormNew extends javax.swing.JFrame {

    /**
     * Creates new form orderFormNew
     */
    DefaultTableModel dtm;
    double total = 0;

    public orderFormNew() throws ClassNotFoundException, SQLException, Exception {
        initComponents();
        dtm = (DefaultTableModel) tblOrderDetail.getModel();

        loadAllCustomers();
        loadAllItems();
        Date();
        loadOrderID();
        comCust.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comCust = new javax.swing.JComboBox<>();
        btnNewCust = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtODate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtOId = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        comItem = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderDetail = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancle = new javax.swing.JButton();
        lblQOnH = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCustID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        lblUnitPrice = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        btnNewItem = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        txtPaidAmnt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        txtTotal = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(218, 255, 218));

        jPanel1.setBackground(new java.awt.Color(253, 253, 228));

        jLabel1.setFont(new java.awt.Font("Sylfaen", 0, 36)); // NOI18N
        jLabel1.setText("Place an Order");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel2.setText("CustID");

        comCust.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        comCust.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Customer" }));
        comCust.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comCustItemStateChanged(evt);
            }
        });
        comCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comCustActionPerformed(evt);
            }
        });
        comCust.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comCustKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comCustKeyReleased(evt);
            }
        });

        btnNewCust.setFont(new java.awt.Font("Rockwell Condensed", 0, 16)); // NOI18N
        btnNewCust.setText("New");
        btnNewCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCustActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel3.setText("Name");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel4.setText("Order Date");

        txtODate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtODateActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel5.setText("Order ID");

        txtOId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOIdActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel6.setText("Item Code");

        comItem.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        comItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item Code" }));
        comItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comItemItemStateChanged(evt);
            }
        });
        comItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comItemActionPerformed(evt);
            }
        });
        comItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comItemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comItemKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel7.setText("Search Item");

        txtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel8.setText("QTY");

        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel9.setText("Amount");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel10.setText("Quantity on Hand");

        tblOrderDetail.setFont(new java.awt.Font("Lucida Calligraphy", 0, 13)); // NOI18N
        tblOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ICode", "IName", "Qty", "UnitPrice", "Total"
            }
        ));
        tblOrderDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderDetailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrderDetail);

        btnRemove.setFont(new java.awt.Font("Rockwell Condensed", 0, 16)); // NOI18N
        btnRemove.setText("Remove Item");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        jLabel11.setText("Sub Total");

        btnSave.setFont(new java.awt.Font("Rockwell Condensed", 0, 16)); // NOI18N
        btnSave.setText("Save / Print");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancle.setFont(new java.awt.Font("Rockwell Condensed", 0, 16)); // NOI18N
        btnCancle.setText("Cancle");

        jLabel12.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel12.setText("Search ID");

        txtCustID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustIDActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel13.setText("Address");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel14.setText("Unit Price");

        jLabel16.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel16.setText("Description");

        txtItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        jLabel15.setText("Discount %");

        jLabel17.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        jLabel17.setText("Total");

        txtDiscount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiscount.setText("0");
        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotal.setText("0000.00");

        btnNewItem.setFont(new java.awt.Font("Rockwell Condensed", 0, 16)); // NOI18N
        btnNewItem.setText("New");
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        jLabel19.setText("Paid Amount");

        txtPaidAmnt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPaidAmnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidAmntActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        jLabel20.setText("Balance");

        lblBalance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBalance.setText("0000.00");

        txtTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTotal.setText("0000.00");

        jLabel18.setFont(new java.awt.Font("ROG Fonts", 0, 13)); // NOI18N
        jLabel18.setText("RS:");

        jLabel21.setFont(new java.awt.Font("ROG Fonts", 0, 13)); // NOI18N
        jLabel21.setText("RS:");

        jLabel22.setFont(new java.awt.Font("ROG Fonts", 0, 13)); // NOI18N
        jLabel22.setText("RS:");

        jLabel23.setFont(new java.awt.Font("ROG Fonts", 0, 13)); // NOI18N
        jLabel23.setText("RS:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNewItem, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtItemCode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel8)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrice)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblQOnH, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtOId)
                            .addComponent(txtODate, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel12))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtCustID, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(comCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNewCust, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnCancle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(txtPaidAmnt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel19)))
                                .addGap(12, 12, 12))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                                .addComponent(jLabel18)
                                .addGap(127, 127, 127)
                                .addComponent(jLabel22)
                                .addGap(118, 118, 118)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtOId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(comCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNewCust)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtODate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtCustID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel7)
                    .addComponent(btnNewItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addComponent(lblQOnH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUnitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRemove)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel19))
                    .addComponent(jLabel17))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnCancle))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtDiscount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPaidAmnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comCustActionPerformed

    }//GEN-LAST:event_comCustActionPerformed

    private void comCustKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comCustKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (comCust.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Customer", "Warning", JOptionPane.NO_OPTION);
                txtCustID.setText("");
                txtName.setText("");
                txtAddress.setText("");
            }
            txtCustID.requestFocus();
        }

    }//GEN-LAST:event_comCustKeyPressed

    private void comCustKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comCustKeyReleased
        // TODO add your handling code here:

//        if (evt.getKeyCode() == 38 || evt.getKeyCode() == 40) {
//            try {
//                // TODO add your handling code here:
//
//                String custID = comCust.getSelectedItem().toString();
//
//                Connection connection = DBConnection.getInstance().getConnection();
//                String sql = "select firstName from customer where custID=?";
//
//                PreparedStatement pstm = connection.prepareStatement(sql);
//                pstm.setObject(1, custID);
//                ResultSet rst = pstm.executeQuery();
//                while (rst.next()) {
//                    txtName.setText(rst.getString(1));
//                }
//
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(orderForm.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (SQLException ex) {
//                Logger.getLogger(orderForm.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        if (comCust.getSelectedIndex() == 0) {
//            txtCustID.setText("");
//            txtName.setText("");
//            txtAddress.setText("");
//        }

    }//GEN-LAST:event_comCustKeyReleased

    private void btnNewCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCustActionPerformed
        try {
            JFrame F1;
            F1 = new customerForm();
            F1.setVisible(true);
            F1.setDefaultCloseOperation(2);
        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNewCustActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
        txtAddress.requestFocus();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtODateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtODateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtODateActionPerformed

    private void txtOIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOIdActionPerformed
        // TODO add your handling code here:
        comCust.requestFocus();
    }//GEN-LAST:event_txtOIdActionPerformed

    private void comItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comItemActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_comItemActionPerformed

    private void comItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comItemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (comItem.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Item", "Warning", JOptionPane.NO_OPTION);
                clearText();
            } else {
                txtQty.requestFocus();
            }
        }
        if (evt.getKeyCode() == 35) {
            clearText();
            txtDiscount.requestFocus();
        }
    }//GEN-LAST:event_comItemKeyPressed

    private void comItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comItemKeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_comItemKeyReleased

    private void txtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescActionPerformed
        // TODO add your handling code here:
        txtQty.requestFocus();
    }//GEN-LAST:event_txtDescActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        try {
            String iCode = comItem.getSelectedItem().toString();
            boolean dup = false;
            int row = -1;
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String ItemsCode = dtm.getValueAt(i, 0).toString();

                if (iCode == ItemsCode) {
                    dup = true;
                    row = i;

                }

            }
            if (dup) {
                int oldQTY = Integer.parseInt(dtm.getValueAt(row, 2).toString());
                int newQTY = Integer.parseInt(txtQty.getText().toString()) + oldQTY;
                int qoh = Integer.parseInt(lblQOnH.getText());

                if (qoh >= newQTY) {
                    double d = Double.parseDouble(lblUnitPrice.getText());
                    int x = Integer.parseInt(txtQty.getText());
                    double total = d * x;
                    txtPrice.setText(total + "0");
                    txtPrice.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "Entered Quantity is exceed the available Quantity", "Warning", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                int qoh = Integer.parseInt(lblQOnH.getText());
                int quaantity = Integer.parseInt(txtQty.getText());
                if (qoh >= quaantity) {

                    double d = Double.parseDouble(lblUnitPrice.getText());
                    int x = Integer.parseInt(txtQty.getText());
                    double total = d * x;
                    txtPrice.setText(total + "0");
                    txtPrice.requestFocus();

                } else {
                    JOptionPane.showMessageDialog(this, "Entered Quantity is exceed the available Quantity", "Warning", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed

        String toString = comItem.getSelectedItem().toString();
        if (!checkItemDup(toString)) {
            Object[] addRow = {toString, txtDesc.getText(), txtQty.getText(), lblUnitPrice.getText(), txtPrice.getText()};
            dtm.addRow(addRow);
            clearText();
            comItem.requestFocus();
        }

//        if (checkItemDuplicate(toString)) {
//            txtPrice.setText(txtPrice.getText());
//            total += Double.parseDouble(txtPrice.getText());
//            txtTotal.setText(total+"");
//            Object[] addRow = {txtItemCode.getText(), txtDesc.getText(), txtQty.getText(), lblUnitPrice.getText(), txtPrice.getText()};
//            dtm.addRow(addRow);
//         clearText();
//         comItem.requestFocus();
//        }
        CalculateTotal();
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed

        if (evt.getKeyCode() == 35) {
            String toString = comItem.getSelectedItem().toString();
            if (!checkItemDup(toString)) {
                Object[] addRow = {toString, txtDesc.getText(), txtQty.getText(), lblUnitPrice.getText(), txtPrice.getText()};
                dtm.addRow(addRow);
                clearText();
                CalculateTotal();
                txtDiscount.requestFocus();
            }
        }


    }//GEN-LAST:event_txtPriceKeyPressed

    private void tblOrderDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderDetailMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblOrderDetail.getSelectedRow();
        comItem.setSelectedItem(dtm.getValueAt(selectedRow, 0));
        txtDesc.setText((String) dtm.getValueAt(selectedRow, 1));
        txtQty.setText(dtm.getValueAt(selectedRow, 2).toString());
        txtPrice.setText(dtm.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_tblOrderDetailMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblOrderDetail.getSelectedRow();
            dtm.removeRow(selectedRow);
            CalculateTotal();
            clearText();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "No more Items in the table " + ex.getMessage(), "Warning", JOptionPane.OK_CANCEL_OPTION);
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {

            String oID = txtOId.getText();
            String oDate = txtODate.getText();
            String custID = txtCustID.getText();
            String custName = txtName.getText();
            Double paidAmnt = Double.parseDouble(txtPaidAmnt.getText());
            Double total = Double.parseDouble(txtTotal.getText());
            Double disc = Double.parseDouble(txtDiscount.getText());
            Double subTotal = Double.parseDouble(lblTotal.getText());
            Double balance = Double.parseDouble(lblBalance.getText());
            
            Order order = new Order(oID, oDate, custID);
            ArrayList<OrderDetail> allOds = new ArrayList<OrderDetail>();
            ArrayList<Item> updateItem = new ArrayList<Item>();
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String icode = dtm.getValueAt(i, 0).toString();
                String qty = dtm.getValueAt(i, 2).toString();
                String unitPrice = dtm.getValueAt(i, 3).toString();

                OrderDetail od = new OrderDetail(oID, icode, qty, unitPrice);
                
                Item SearchItem = ItemController.SearchItem(icode);
                SearchItem.setQuantityOnHand(SearchItem.getQuantityOnHand() - Integer.parseInt(qty));
                updateItem.add(SearchItem);
                allOds.add(od);
            }
            boolean PurchaseOrder = InvoiceController.PurchaseOrder(order, allOds);
            if (PurchaseOrder) {
                for (Item upItem : updateItem) {
                    ItemController.updateItem(upItem);
                }
                JOptionPane.showMessageDialog(this, "Order is Complete", "Done", JOptionPane.INFORMATION_MESSAGE);
                 InputStream is = this.getClass().getResourceAsStream("/reports/Invoice_Report.jasper");
                 HashMap map=new HashMap();
                 map.put("custID", custID);
                 map.put("custName", custName);
                 map.put("orderID", oID);
                 map.put("total", subTotal);
                 map.put("diacount", disc);
                 map.put("subTotal", total);
                 map.put("paidAmount", paidAmnt);
                 map.put("balance", balance);
                JasperPrint print = JasperFillManager.fillReport(is, map,new JRTableModelDataSource(dtm));
                JasperViewer.viewReport(print,false);
                comCust.setSelectedIndex(0);
                comCust.requestFocus();
                refreshAll();
                
               
            } else {
                JOptionPane.showMessageDialog(this, "Oop Something went Wronge", "Done", JOptionPane.OK_CANCEL_OPTION);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void comCustItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comCustItemStateChanged
        try {
            String CustID = comCust.getSelectedItem().toString();
            Customer searchCustomer = CustomerController.searchCustomer(CustID);

            txtCustID.setText(searchCustomer.getId());
            txtName.setText(searchCustomer.getfName());
            txtAddress.setText(searchCustomer.getAddress());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {

        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_comCustItemStateChanged

    private void txtCustIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustIDActionPerformed
        try {
            String CustID = txtCustID.getText();
            Customer searchCustomer = CustomerController.searchCustomer(CustID);
            if (searchCustomer != null) {
                txtCustID.setText(searchCustomer.getId());
                txtName.setText(searchCustomer.getfName());
                txtAddress.setText(searchCustomer.getAddress());;
                comCust.setSelectedItem(searchCustomer.getId());
                txtName.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "No such Customer", "Warning", JOptionPane.ERROR_MESSAGE);
                clearText();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_txtCustIDActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
        comItem.requestFocus();
    }//GEN-LAST:event_txtAddressActionPerformed

    private void comItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comItemItemStateChanged
        try {
            // TODO add your handling code here:

            String ItemCode = comItem.getSelectedItem().toString();
            Item SearchItem = ItemController.SearchItem(ItemCode);

            txtItemCode.setText(SearchItem.getCode());
            txtDesc.setText(SearchItem.getDescription());
            lblUnitPrice.setText(SearchItem.getUnitPrice() + "");
            lblQOnH.setText(SearchItem.getQuantityOnHand() + "");

        } catch (SQLException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_comItemItemStateChanged

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeActionPerformed
        try {
            // TODO add your handling code here:
            String code = txtItemCode.getText();
            Item SearchItem = ItemController.SearchItem(code);

            txtItemCode.setText(SearchItem.getCode());
            txtDesc.setText(SearchItem.getDescription());
            lblUnitPrice.setText(SearchItem.getUnitPrice() + "");
            lblQOnH.setText(SearchItem.getQuantityOnHand() + "");
            comItem.setSelectedItem(SearchItem.getCode());

            txtQty.requestFocus();

        } catch (SQLException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtItemCodeActionPerformed

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        try {
            JFrame F1;
            F1 = new itemForm();
            F1.setVisible(true);
            F1.setDefaultCloseOperation(2);
        } catch (Exception ex) {
            Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        double subTotal = Double.parseDouble(txtTotal.getText());
        double discount = Double.parseDouble(txtDiscount.getText());
        double total = subTotal - subTotal * (discount / 100);
        lblTotal.setText(total + "");
        txtPaidAmnt.requestFocus();
    }//GEN-LAST:event_txtDiscountActionPerformed

    private void txtPaidAmntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidAmntActionPerformed
        double total = Double.parseDouble(lblTotal.getText());
        double paidAmount = Double.parseDouble(txtPaidAmnt.getText());
        if (paidAmount > total) {
            lblBalance.setText((paidAmount - total) + "");
            btnSave.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Paid amount is less than total payment", "Warning", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txtPaidAmntActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orderFormNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orderFormNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orderFormNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orderFormNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new orderFormNew().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(orderFormNew.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancle;
    private javax.swing.JButton btnNewCust;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comCust;
    private javax.swing.JComboBox<String> comItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblQOnH;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblUnitPrice;
    private javax.swing.JTable tblOrderDetail;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCustID;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtODate;
    private javax.swing.JTextField txtOId;
    private javax.swing.JTextField txtPaidAmnt;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables

    private void loadAllCustomers() throws ClassNotFoundException, SQLException, Exception {
        ArrayList<Customer> loadAll = CustomerController.loadAllCustomer();
        for (Customer customer : loadAll) {
            comCust.addItem(customer.getId());
        }
    }

    private void loadAllItems() throws ClassNotFoundException, SQLException, Exception {
        ArrayList<Item> loadAllItem = ItemController.loadAllItem();
        for (Item item : loadAllItem) {
            comItem.addItem(item.getCode());
        }
    }

    public void Date() {
        Calendar cal = new GregorianCalendar();
        int day = cal.get(Calendar.DATE);
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);

        txtODate.setText(year + "-" + (month + 1) + "-" + day);
    }

    public void clearText() {
        txtItemCode.setText("");
        txtDesc.setText("");
        lblUnitPrice.setText("");
        txtQty.setText("");
        txtPrice.setText("");
        lblQOnH.setText("");
        comItem.setSelectedIndex(0);
    }

    private void loadOrderID() throws ClassNotFoundException, SQLException, Exception {
//        int i = new Random().nextInt(90000);
//        txtOId.setText("OID" + i);
        String lastOid = InvoiceController.getLastOid();
        String substring = lastOid.substring(3);
        System.out.println(substring);
        int num = Integer.parseInt(substring) + 1;
//        System.out.printf("%03d", num);
        txtOId.setText("OID" + num);

    }

    public void CalculateTotal() {
        double temptotal = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            double total = Double.parseDouble(dtm.getValueAt(i, 4).toString());
            temptotal += total;
        }
        txtTotal.setText(temptotal + "0");
    }

    private boolean checkItemDup(String toString) {
        for (int i = 0; i < dtm.getRowCount(); i++) {
            String iCode = dtm.getValueAt(i, 0).toString();
            int oldQTY = Integer.parseInt(dtm.getValueAt(i, 2).toString());

            if (iCode == toString) {
                int newQTY = Integer.parseInt(txtQty.getText().toString()) + oldQTY;
                double newTotal = newQTY * Double.parseDouble(lblUnitPrice.getText().toString());
                dtm.setValueAt(newQTY, i, 2);

                dtm.setValueAt(newTotal, i, 4);
                clearText();
                comItem.requestFocus();
                return true;
            }
        }
        return false;
    }

    private void refreshAll() throws ClassNotFoundException, SQLException, Exception {
        clearText();
        loadOrderID();
        dtm.setRowCount(0);
        txtCustID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtTotal.setText("0000.00");
        txtDiscount.setText("0");
        lblTotal.setText("0000.00");
        txtPaidAmnt.setText("");
        lblBalance.setText("0000.00");
        Date();
    }
}
